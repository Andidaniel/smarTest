@page "/"
@layout Layout.EmptyLayout
@using SmarTest.Services.Interfaces

<div class="login-page-container">
    <div class="login-page-inner">
        <h3>Login</h3>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="firstName">First Name</label>
                <InputText id="firstName" class="form-control" @bind-Value="loginModel.FirstName" />
                <ValidationMessage For="@(() => loginModel.FirstName)" />
            </div>

            <div class="form-group">
                <label for="lastName">Last Name</label>
                <InputText id="lastName" class="form-control" @bind-Value="loginModel.LastName" />
                <ValidationMessage For="@(() => loginModel.LastName)" />
            </div>

            <button type="submit" class="btn btn-primary">Login</button>
        </EditForm>

        <p>@loginMessage</p>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string loginMessage;

    [Inject]
    private IAuthService AuthService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private async Task HandleLogin()
    {
        bool isValid = await AuthService.LoginAsync(loginModel.FirstName, loginModel.LastName);

        if (!isValid)
        {
            loginMessage = "Login failed: Invalid credentials.";
            return;
        }

        if (AuthService.LoggedInUser.IsTeacher)
        {
            NavigationManager.NavigateTo("/teacher/home");
        }
        else
        {
            NavigationManager.NavigateTo("/student/home");
        }
    }

    public class LoginModel
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
    }
}
